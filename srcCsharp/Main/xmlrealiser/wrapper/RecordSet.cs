using System.Collections.Generic;

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.02.04 at 09:14:07 AM EST 
//

/*
 * Ported to C# by Gert-Jan de Vries
 */

namespace SimpleNLG.Main.xmlrealiser.wrapper
{

    /**
     * <p>Java class for RecordSet complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType name="RecordSet">
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="Record" type="{http://simplenlg.googlecode.com/svn/trunk/res/xml}DocumentRealisation" maxOccurs="unbounded"/>
     *       &lt;/sequence>
     *       &lt;attribute name="name" type="{http://www.w3.org/2001/XMLSchema}string" />
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
	public class RecordSet
	{
		protected internal IList<DocumentRealisation> record;
		protected internal string name;

        /**
         * Gets the value of the record property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the record property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getRecord().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link DocumentRealisation }
         * 
         * 
         */
		public virtual IList<DocumentRealisation> Record
		{
			get
			{
				if (record == null)
				{
					record = new List<DocumentRealisation>();
				}
				return record;
			}
		}
        /**
         * Set / get the value of the name property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
		public virtual string Name
		{
			get
			{
				return name;
			}
			set
			{
				name = value;
			}
		}

	}

}